<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:s="clr-namespace:System;assembly=mscorlib"
                    xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
                    xmlns:icons="http://metro.mahapps.com/winfx/xaml/iconpacks"
                    xmlns:my="clr-namespace:MetroRibbon.helpers">
  <Style x:Key="ToolTipBase" TargetType="{x:Type ToolTip}" BasedOn="{StaticResource MetroToolTip}">
    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
    <Setter Property="FrameworkElement.UseLayoutRounding" Value="true"/>
    <Setter Property="UIElement.SnapsToDevicePixels" Value="true"/>
    <Setter Property="RenderOptions.ClearTypeHint" Value="Enabled"/>
    <Setter Property="TextOptions.TextFormattingMode" Value="Display"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToolTip}">
          <Border Background="{DynamicResource WhiteBrush}" BorderThickness="1"
                  BorderBrush="{DynamicResource ContextMenuBorderBrush}">
            <TextBlock Margin="5" Foreground="{DynamicResource BlackBrush}"
                       Text="{TemplateBinding ContentControl.Content}" TextWrapping="Wrap"/>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="MetroToolTipBase" TargetType="{x:Type my:MetroToolTip}">
    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
    <Setter Property="Control.Padding" Value="10"/>
    <Setter Property="Control.Background" Value="{DynamicResource GrayBrush10}"/>
    <Setter Property="Control.Foreground" Value="{DynamicResource BlackBrush}"/>
    <Setter Property="Control.BorderBrush" Value="{DynamicResource AccentColorBrush}"/>
    <Setter Property="Control.BorderThickness" Value="1"/>
    <Setter Property="my:MetroToolTip.IconKind" Value="Lightbulb"/>
    <Setter Property="FrameworkElement.MaxWidth" Value="350"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type my:MetroToolTip}">
          <Border x:Name="border" Background="{DynamicResource WhiteBrush}"
                  BorderThickness="{TemplateBinding Control.BorderThickness}"
                  BorderBrush="{TemplateBinding Control.BorderBrush}" Padding="0">
            <Grid Background="{TemplateBinding Control.Background}">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
              </Grid.ColumnDefinitions>
              <Border Background="{DynamicResource AccentColorBrush}" BorderThickness="0">
                <icons:PackIconMaterial x:Name="Icon" Kind="{TemplateBinding my:MetroToolTip.IconKind}"
                                  Control.Foreground="{DynamicResource IdealForegroundColorBrush}" FrameworkElement.Width="32"
                                  FrameworkElement.Height="32" FrameworkElement.VerticalAlignment="Center"
                                  FrameworkElement.Margin="15,0"/>
              </Border>
              <Border Grid.Column="1" Padding="{TemplateBinding Control.Padding}">
                <StackPanel>
                  <TextBlock FontWeight="Bold" Margin="0,-5,15,5"
                             Text="{Binding Title, RelativeSource={RelativeSource TemplatedParent}}"/>
                  <TextBlock Margin="0,0,15,0" Text="{TemplateBinding ContentControl.Content}" TextWrapping="Wrap"
                             FontWeight="Normal"/>
                </StackPanel>
              </Border>
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ToolTipperBase" TargetType="{x:Type my:ToolTipper}">
    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
    <Setter Property="Control.Padding" Value="0"/>
    <Setter Property="FrameworkElement.VerticalAlignment" Value="Center"/>
    <Setter Property="Control.Background" Value="Transparent"/>
    <Setter Property="Control.Foreground" Value="{DynamicResource GrayBrush3}"/>
    <Setter Property="my:ToolTipper.IconKind" Value="InformationOutline"/>
    <Setter Property="my:ToolTipper.IconSize" Value="16"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type my:ToolTipper}">
          <Border x:Name="border" Background="{TemplateBinding Control.Background}"
                  BorderThickness="{TemplateBinding Control.BorderThickness}"
                  BorderBrush="{TemplateBinding Control.BorderBrush}" Padding="{TemplateBinding Control.Padding}"
                  ToolTipService.ShowDuration="10000">
            <icons:PackIconMaterial x:Name="Icon" Kind="{TemplateBinding my:ToolTipper.IconKind}"
                              Control.Foreground="{TemplateBinding Control.Foreground}"
                              FrameworkElement.Width="{TemplateBinding my:ToolTipper.IconSize}"
                              FrameworkElement.Height="{TemplateBinding my:ToolTipper.IconSize}"
                              FrameworkElement.VerticalAlignment="Center"/>
            <FrameworkElement.ToolTip>
              <my:MetroToolTip Title="{Binding TipTitle, RelativeSource={RelativeSource TemplatedParent}}"
                               Content="{Binding TipContent, RelativeSource={RelativeSource TemplatedParent}}"/>
            </FrameworkElement.ToolTip>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
              <Setter Value="{DynamicResource AccentColorBrush}" Property="Control.Foreground"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter Value="{DynamicResource GrayBrush5}" Property="Control.Foreground"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>