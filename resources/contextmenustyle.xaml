<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:s="clr-namespace:System;assembly=mscorlib"
                    xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
                    xmlns:cm="http://www.caliburnproject.org"
                  
                    xmlns:icons="http://metro.mahapps.com/winfx/xaml/iconpacks"
                    xmlns:helpers="clr-namespace:MetroRibbon.helpers"
                    xmlns:metroRibbon="clr-namespace:MetroRibbon">
  <Style x:Key="MetroContextMenuBase" TargetType="{x:Type ContextMenu}"
         BasedOn="{StaticResource MetroContextMenu}">
    <Setter Property="Control.FontSize" Value="12"/>
   
  </Style>
  <Style x:Key="ToolbarButtonBase" TargetType="{x:Type helpers:ToolbarButton}">
    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
    <Setter Property="Control.Padding" Value="8,6"/>
    <Setter Property="helpers:MetroFlatButton.IconSize" Value="18"/>
    <Setter Property="Control.Foreground" Value="{DynamicResource AccentColorBrush}"/>
    <Setter Property="Control.Background" Value="Transparent"/>
    <Setter Property="FrameworkElement.HorizontalAlignment" Value="Center"/>
    <Setter Property="Control.BorderThickness" Value="0"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type helpers:ToolbarButton}">
          <Grid>
            <Border Background="{TemplateBinding Control.Background}"
                    BorderThickness="{TemplateBinding Control.BorderThickness}"
                    BorderBrush="{TemplateBinding Control.BorderBrush}" Padding="{TemplateBinding Control.Padding}"
                    CornerRadius="1">
              <icons:PackIconMaterial x:Name="Icon" Kind="{TemplateBinding helpers:MetroFlatButton.IconKind}"
                                FrameworkElement.Width="{TemplateBinding helpers:MetroFlatButton.IconSize}"
                                FrameworkElement.Height="{TemplateBinding helpers:MetroFlatButton.IconSize}"
                                Control.Foreground="{TemplateBinding Control.Foreground}"
                                FrameworkElement.HorizontalAlignment="Center" FrameworkElement.VerticalAlignment="Center"/>
            </Border>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
              <Setter Property="helpers:MetroFlatButton.IconSize" Value="16"/>
              <Setter Value="{DynamicResource HighlightBrush}" Property="Control.Background"/>
              <Setter Value="{DynamicResource IdealForegroundColorBrush}" Property="Control.Foreground"/>
            </Trigger>
            <Trigger Property="ButtonBase.IsPressed" Value="true">
              <Setter Value="{DynamicResource BlackBrush}" Property="Control.Background"/>
              <Setter Value="{DynamicResource WhiteBrush}" Property="Control.Foreground"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter Value="{DynamicResource GrayBrush3}" Property="Control.Foreground"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="MenuToolbarBase" TargetType="{x:Type helpers:MenuToolbar}">
    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
    <Setter Property="Control.Background" Value="{DynamicResource GrayBrush10}"/>
    <Setter Property="Control.BorderBrush" Value="{DynamicResource GrayBrush5}"/>
    <Setter Property="Control.BorderThickness" Value="0,0,0,1"/>
    <Setter Property="MenuItem.StaysOpenOnClick" Value="true"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type helpers:MenuToolbar}">
          <Border x:Name="Border" Margin="0" Padding="22,7,12,7"
                  SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" HorizontalAlignment="Stretch"
                  BorderThickness="{TemplateBinding Control.BorderThickness}"
                  BorderBrush="{TemplateBinding Control.BorderBrush}"
                  Background="{TemplateBinding Control.Background}">
            <ItemsControl ItemsSource="{Binding Buttons, RelativeSource={RelativeSource TemplatedParent}}">
              <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                  <UniformGrid HorizontalAlignment="Left"
                               Columns="{Binding ColumnsCount, RelativeSource={RelativeSource AncestorType={x:Type helpers:MenuToolbar}}}"/>
                </ItemsPanelTemplate>
              </ItemsControl.ItemsPanel>
            </ItemsControl>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>