<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:s="clr-namespace:System;assembly=mscorlib"
                    xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
                    xmlns:my="clr-namespace:MetroRibbon"
                    xmlns:icons="http://metro.mahapps.com/winfx/xaml/iconpacks"
                    xmlns:metro="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
                    xmlns:helpers="clr-namespace:MetroRibbon.helpers">
  <Style x:Key="MetroToggleBase" TargetType="{x:Type helpers:MetroToggle}">
    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
    <Setter Property="Control.Padding" Value="2"/>
    <Setter Property="Control.Background" Value="{DynamicResource WhiteBrush}"/>
    <Setter Property="Control.Foreground" Value="{DynamicResource BlackBrush}"/>
    <Setter Property="Control.BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
    <Setter Property="Control.BorderThickness" Value="1"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type helpers:MetroToggle}">
          <Border x:Name="Border" Background="{TemplateBinding Control.Background}"
                  BorderThickness="{TemplateBinding Control.BorderThickness}"
                  BorderBrush="{TemplateBinding Control.BorderBrush}" Padding="{TemplateBinding Control.Padding}">
            <icons:PackIconMaterial x:Name="Icon" FrameworkElement.Margin="{TemplateBinding Control.Padding}"
                              Kind="{TemplateBinding helpers:MetroToggle.OffKind}"
                              Control.Foreground="{TemplateBinding Control.Foreground}"
                              FrameworkElement.Width="{Binding IconSize, RelativeSource={RelativeSource TemplatedParent}}"
                              FrameworkElement.Height="{Binding IconSize, RelativeSource={RelativeSource TemplatedParent}}"/>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
              <Setter Value="{DynamicResource HighlightBrush}" Property="Control.Foreground"/>
              <Setter Value="{DynamicResource AccentColorBrush}" Property="Control.BorderBrush"/>
              <Setter TargetName="Icon" Value="{Binding OnKind, RelativeSource={RelativeSource TemplatedParent}}"
                      Property="Kind"/>
            </Trigger>
            <Trigger Value="{x:Null}" Property="ToggleButton.IsChecked">
              <Setter Value="{DynamicResource AccentColorBrush3}" Property="Control.Foreground"/>
            </Trigger>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
              <Setter Value="{DynamicResource TextBoxMouseOverBorderBrush}" Property="Control.BorderBrush"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter Value="{DynamicResource GrayBrush5}" Property="Control.Foreground"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="MetroToggleSwitchBase" TargetType="{x:Type metro:ToggleSwitch}"
         BasedOn="{StaticResource MahApps.Metro.Styles.ToggleSwitch.Win10}">
    <Setter Property="Control.FontWeight" Value="Normal"/>
    <Setter Property="Control.FontSize" Value="12"/>
    <Setter Property="HeaderedContentControl.HeaderTemplate">
      <Setter.Value>
        <DataTemplate>
          <TextBlock Visibility="Collapsed"/>
        </DataTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="metro:ToggleSwitch.ToggleSwitchButtonStyle">
      <Setter.Value>
        <Style TargetType="{x:Type metro:ToggleSwitchButton}"
               BasedOn="{StaticResource MahApps.Metro.Styles.ToggleSwitchButton.Win10}">
          <Setter Property="FrameworkElement.Width" Value="32"/>
          <Setter Property="FrameworkElement.Height" Value="16"/>
          <Setter Property="metro:ToggleSwitchButton.ThumbIndicatorWidth" Value="12"/>
          <Setter Property="FrameworkElement.Margin" Value="0,0,5,0"/>
          <Setter Property="FrameworkElement.VerticalAlignment" Value="Center"/>
        </Style>
      </Setter.Value>
    </Setter>
   
  </Style>
</ResourceDictionary>